1. When you use strict mode in JavaScript, you are opting in to a set of constraints that were designed to prevent certain types of mistakes and ambiguities that can arise in the language. 
2. boven de code die je strict wil hebben
3. Zodat je minder fouten kan maken en meer overzichtelijke errors krijgt
4. een set task die wordt gedaan iedere keer dat ie wordt opgeroepen.
5. een variabele is een waarde, een functie is een stuk uitvoerende code
6. het gedeelte van de functie waar de code inzit
function addNumbers(a, b) {
   let sum = a + b;
   return sum;
}
7. 
1 - b
2 - c
3 - d
4 - d
5 - e
6 - a

8. niks
9. Cheese
10. Cheese
Cheese
11. je krijgt 3 knuffels van mij <3
12. je krijgt 12 knuffels van mij <3
13. Je krijgt 1 knuffel van mij <3 
14. je krijgt 12 knuffels van mij <3
15.
Je krijgt 12 knuffels van mij <3
extra Knuffels!
16. Je krijgt 12 knuffels van mij <3
17. niks
18. 4
19. 
4
4
20. 8
21. 20
22. wanner het return gebruikt
23. 4
24. function declaration heeft een naam, function expressing niet.
function myFunction() //function decleration {
  // function body
}
const myFunction = function() //function expression{
  // function body
};
25. een parameter zit in de functie, een argument wordt gebruikt bij het roepen van een functie
26. Arrow functions hoeven geen function tag te hebben en hoeven geen {} te hebben wanneer er maar 1 line van code is.
27. omdat het een arrow gebruikt om de code te definen.
28. een arrow function is anonymous, dat betekent dat de functie geen naam is maar is verbonden aan een variabele.
29. 5
30. 8
31. 34
32. Henk works as a Teacher and henk is very happy
33. Frits works as a Developer and Frits is very happy
34. henk works as a teacher and henk is very undefined
35. Dat je niet meerdere keren dezelfde naam gebruikt in je code zodat het er mooier uit gaat zien
36. het stuurt de uitkomst van de variabele terug naar de opgeroepe code
37. Omdat de code van boven naar beneden word gelezen

1. Een manier om data op te slaan
2. Een lijst aan variabelen
3. je hoeft geen verschillende variabelen te maken voor dezelfde uitkomst
4. b, c, d, e, f
5. 
6. niks
   
7.
   2
   3

8. 
   2
   27
9. 
   2
   3
   27

10. undefined
11. Nee, de return value kan wat effecten veranderen maar hoeft niet te worden gebruikt
12. Array(4) [ 4, 1, 2, 3 ]
13. 5
14. 3
15. 8
16. Uncaught ReferenceError: friendOne is not defined
    <anonymous> Choo

17. Array(3) [ "Henk", "Frits", "Kees" ]
18. 
1
NaN
19.
1
10
20. 
0
1
21. 
true
true
22. 
false
false
23. 
-2
24. 
Great!
true

1. Een array slaat de waarden op in numerische volgorde beginnend bij 0 waarbij een object keywoorden gebruiken
2. de key is de variabelenaam in een object
3. de value is de waarde achter de key
4. een key en een value in een object
5. een property is een van de variabelen in een object
7. je gebruikt dot notation als je een specifieke property wilt hebben van een object en je gebruikt brackets als je meerdere dingen(zoals een variabel) wilt gebruiken om een waarde te krijgen
8. Henk Henk
9. de Vries
10. undefined
11. undefined
12. Hello
13. True;
14. Henk de Vries
15. function getFullName()
16. Piet Janssens 
17. 23
18. 
23
23
19. 